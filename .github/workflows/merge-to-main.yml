name: 'CI on Merge to Main'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # This allows you to manually trigger the workflow

jobs:
  ci:
    name: 'Merge to main'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 'Install dependencies'
        working-directory: .
        run: npm ci

      - name: 'Run Lint'
        working-directory: .
        run: npm run lint

      - name: 'Build'
        working-directory: .
        run: npm run build

      - name: 'Unit Tests'
        working-directory: .
        run: npm run test

      - name: 'Write secrets to .env file'
        run: |
          echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env

      - name: 'Load .env file'
        run: |
          set -o allexport
          source .env
          set -o allexport
          # Verify that the variables are loaded
          env | grep -E 'NODE_ENV|APP_PORT|DB_LOGS|POSTGRES_HOST|POSTGRES_PORT'

      - name: 'Print environment variables'
        run: |
          echo "NODE_ENV: $NODE_ENV"
          echo "APP_PORT: $APP_PORT"
          echo "DB_LOGS: $DB_LOGS"
          echo "POSTGRES_HOST: $POSTGRES_HOST"
          echo "POSTGRES_PORT: $POSTGRES_PORT"

      - name: 'Install Docker Compose'
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: 'Start the docker containers'
        working-directory: .
        run: |
          docker-compose -f ./docker-compose.yml up -d 3at-postgres

      - name: 'Run migration scripts'
        working-directory: .
        run: npm run migration:run
        env:
          POSTGRES_HOST: localhost  # Set the environment variable
          NODE_ENV: development
          APP_PORT: 3000
          DB_LOGS: all
          POSTGRES_PORT: 5432
          POSTGRES_USER: threeangle
          POSTGRES_PASSWORD: threeangle
          POSTGRES_DB: threeangle

      - name: 'E2E tests'
        env:
          POSTGRES_HOST: localhost  # Set the environment variable
          NODE_ENV: development
          APP_PORT: 3000
          DB_LOGS: all
          POSTGRES_PORT: 5432
          POSTGRES_USER: threeangle
          POSTGRES_PASSWORD: threeangle
          POSTGRES_DB: threeangle
        working-directory: .
        run: npm run test:e2e
